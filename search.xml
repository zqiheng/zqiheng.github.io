<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[（一）IDEA开发工具安装与破解]]></title>
    <url>%2F2018%2F06%2F19%2F%EF%BC%88%E4%B8%80%EF%BC%89IDEA%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E4%B8%8E%E7%A0%B4%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[说明：本章专门介绍Idea开发工具的安装与破解（当然你要是有钱任性，也可以不用破解） 安装步骤1. 进入IDEA官网下载安装包 官网链接 1.1在首页点击download下载安装包，注意我们这里是下载完整版（Ultimate），因为社区办不支持Java EE、Spring开发。 1.2安装过程都是傻瓜式安装，没有其它需求一直next就行。（注意：其中有个环节选择64位版就行，其它可以不用选（.java .kt 等等）） 2.安装完成后配置2.1 主题有默认黑色，还有其它可自定义2.2 激活 首先，编辑C:\Windows\System32\drivers\etc下的hosts文件，在文件最后加入下面一行： 0.0.0.0 account.jetbrains.com 如果你没有权限修改，先将hosts文件剪切到桌面，在桌面上打开文件，在进行添加上面代码。然后在剪切回去。 在激活界面选择Activation code方式激活，并填入下列激活码： EB101IWSWD-eyJsaWNlbnNlSWQiOiJFQjEwMUlXU1dEIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiRFBOIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In1dLCJoYXNoIjoiNjk0NDAzMi8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-Gbb7jeR8JWOVxdUFaXfJzVU/O7c7xHQyaidCnhYLp7v32zdeXiHUU7vlrrm5y9ZX0lmQk3plCCsW+phrC9gGAPd6WDKhkal10qVNg0larCR2tQ3u8jfv1t2JAvWrMOJfFG9kKsJuw1P4TozZ/E7Qvj1cupf/rldhoOmaXMyABxNN1af1RV3bVhe4FFZe0p7xlIJF/ctZkFK62HYmh8V3AyhUNTzrvK2k+t/tlDJz2LnW7nYttBLHld8LabPlEEjpTHswhzlthzhVqALIgvF0uNbIJ5Uwpb7NqR4U/2ob0Z+FIcRpFUIAHEAw+RLGwkCge5DyZKfx+RoRJ/In4q/UpA==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog== 注：如果该激活码有问题可到 http://idea.lanyus.com/ ，获取激活码 最后：完成安装、可以建一个简单的java项目测试一下安装是否成功…]]></content>
      <categories>
        <category>Java</category>
        <category>Java EE</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Java EE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub + Hexo 搭建]]></title>
    <url>%2F2018%2F06%2F15%2FGitHub-Hexo-%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[说明这里还是简单的记录一下基于GitHub+Hexo+Next的个人博客搭建把，防止以后忘了… 搭建步骤 1. Git下载与安装Git是目前非常受欢迎的一个开源的分布式版本控制系统，用于敏捷高效地处理任何或大或小的项目。具体的一些介绍和使用的不具体写了，自己看教程。 菜鸟教程链接 官网下载链接 2. GitHub 账号注册gitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。作为一个程序猿，现在基本都有一个GitHub账号，来托管自己的代码，如果你没有那就Out了。 官方地址链接 3. Node.js 下载与安装Node.js也是目前特别火的一个后台服务端脚本语言。简单的说就是运行在服务端的JavaScript。基于Chrome JavaScript运行时建立的一个平台。运行速度快、性能非常好。 菜鸟教程链接 官网下载链接 4. 搭建个人博客Hexo 安装Hexo，在本地电脑随一个磁盘新建一个文件夹，比如取名Blog来存放自己的博客。在文件夹内右击点击Git Bash Here进入命令行窗口，执行以下代码： npm install -g hexo-cli 初始化Hexo，得到hexo文件夹，用于存放Hexo博客的所有文件。还是在刚刚那个窗口中执行以下代码： hexo init hexo 配置Hexo，安装hexo依赖文件,生成部署文件，分别执行以下代码： cd hexo npm install hexo generate 继续在命令行窗口输入以下代码，启动服务器(hexo server == hexo s)： hexo server 随便打开一个浏览器，地址栏输入 http://localhost:4000/ ，如果成功显示Hexo页面，则搭建成功。 将Hexo 博客部署到GitHub中 新建一个仓库，命名为：username.github.id 在本地命令行配置Git： 在Blog文件夹目录右击打开Git Bash窗口，输入以下命名 git config -- global user.name "GitHub 用户名" git config -- global user.email "GitHub 邮箱" 重点：生成 SSH KEY，其实就是生成一个公钥和密钥，GitHub需要一个密钥才能与本地相连接，执行以下命名，并且连续按3次回车生成密钥（注：C 为大写）： ssh-keygen -t rsa -C "邮箱地址" 后面会有一个地址，可以看到。就是我们生成的密钥保存地址。即：C:/Users/用户名/.ssh文件中。打开这个目录找到 id_rsa.pub 文件，复制全部内容。 在网页打开GitHub，依次点击 我的头像 - Settings - SSH and GPG keys - New SSH key，将刚刚复制的密钥内容粘贴到key的输入框，然后点击Add Key，配置成功。 修改hexo 文件下的_config.yml （站点配置文件）,修改 deploy 属性代码，将本地 hexo 项目托管到 GitHub 上，如下所示： deploy: type: git #部署的类型 repository: git@github.com:zqiheng/zqiheng.github.io.git # 仓库地址 branch: master #分支名称 message: hexo deploy #提交信息 然后执行下面的命令，安装hexo-deployer-git插件，快速把代码托管到GitHub上面 npm install hexo-deployer-git --save 最后执行下列命令，将hexo项目托管到GitHub平台上 hexo clean hexo generate hexo deploy 或： hexo clean hexo g hexo d 然后在浏览器输入：https://username.github.io/ 访问，可以看到自己部署的博客 最后说一下Hexo全局配置文件，具体代码如下： # Hexo Configuration ## Docs: https://hexo.io/docs/configuration.html ## Source: https://github.com/hexojs/hexo/ # Site 站点信息配置 title: Heng Bolg #站点名 subtitle: 世上本没有路，走的人多了也就有了路... #站点副标题 description: 主要记录自己的学习记录与心得，在校学生一枚... #站点信息简介 keywords: author: 恒 #站点作者 language: zh-CN #站点语言，default 默认是英语， zh-CN 是中文 timezone: #时区，不填 avatar: /images/logo.png #图片 # URL 博客地址 ## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/' url: https://zqiheng.github.io root: / permalink: :year/:month/:day/:title/ permalink_defaults: # Directory 目录设置 source_dir: source #源文件 public_dir: public #生成的网页文件 tag_dir: tags #标签 archive_dir: archives #归档 category_dir: categories #分类 code_dir: downloads/code # i18n_dir: :lang #国际化 skip_render: # Writing 文章布局 new_post_name: :title.md # File name of new posts default_layout: post #默认模板 titlecase: false # 标题转换成大写 external_link: true # 新标签页里打开连接 filename_case: 0 render_drafts: false post_asset_folder: false relative_link: false future: true highlight: #代码块设置 enable: true #语法高亮 line_number: true #显示行号 auto_detect: false tab_replace: # Home page setting 页设置 # path: Root path for your blogs index page. (default = '') # per_page: Posts displayed per page. (0 = disable pagination) # order_by: Posts order. (Order by date descending by default) index_generator: path: '' per_page: 4 #每页文章数量 order_by: page #-date # Category & Tag 分类和标签 default_category: uncategorized category_map: tag_map: # Date / Time format 日期/格式 ## Hexo uses Moment.js to parse and display date ## You can customize the date format as defined in ## http://momentjs.com/docs/#/displaying/format/ date_format: YYYY-MM-DD time_format: HH:mm:ss # Pagination 归档显示 ## Set per_page to 0 to disable pagination per_page: 10 pagination_dir: page # Extensions 扩展 ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: next # Deployment 站点部署到GitHub上 ## Docs: https://hexo.io/docs/deployment.html deploy: type: git #部署的类型 repository: git@github.com:zqiheng/zqiheng.github.io.git # 仓库地址 branch: master #分支名称 message: hexo #提交信息 #查找 search: path: search.xml field: post format: html limit: 10000 5. Next下载与配置—更新时间：2018.06.17— 下载Next主题，在Hexo目录下右击进入Git Bash Here 窗口，输入下列命令 git clone https://github.com/iissnan/hexo-theme-next themes/next 启动主题 当克隆下载完成后，打开站点配置文件(hexo目录下的_config.yml)，找到 theme字段，并将其值更改为next # Extensions 扩展 ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: next 重新启动服务器，在浏览器地址栏输入http://localhost:4000访问，检测配置是否成功。 主题文件配置，目录为（hexo\themes\next）下的_config.yml文件。 我使用的主题样式是： # Schemes #scheme: Muse #scheme: Mist scheme: Pisces #scheme: Gemini 配置左侧导航栏菜单按钮，在主题配置文件中，找到menu属性，做如下配置： menu: home: / || home #首页，后面的表示图标 categories: /categories/ || th #分类 archives: /archives/ || archive #归档 tags: /tags/ || tags #标签 about: /about/ || user #关于 #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat 为标签categories、tags、about，创建相应的界面，代码如下： hexo new page 'categories' hexo new page 'tags' hexo new page 'about' 在 source目录下，会看到刚刚生成的三个文件夹，依次打开文件夹，给每个index.md文件添加上type字段。 配置左侧导航栏搜索按钮 安装 hexo-generator-searchdb ，在Git Bash Here窗口执行以下代码： npm install hexo-generator-searchdb --save 打开全局配置文件，在最后新增下面代码； search: path: search.xml field: post format: html limit: 10000 打开主题配置文件，找到local_search属性，开启本地搜索功能 local_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 重新部署项目，并发布到GitHub上 hexo clean hexo g hexo d 基本配置就是这样，其它功能后面再补充]]></content>
      <categories>
        <category>Hexo</category>
        <category>个人博客搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello Hexo]]></title>
    <url>%2F2018%2F06%2F15%2FHello-Hexo%2F</url>
    <content type="text"><![CDATA[Hexo简介：简而言之，Hexo 是一个基于 Node.js 的静态博客程序，可以方便的生成静态网页托管在github和Heroku上。其作者是来自台湾的tommy351大神。Hexo 因其界面简洁、美观且对各类人群（不只是程序猿）友好而广受欢迎，声望不亚于大名鼎鼎的WordPress。 说明为什么需要一个博客对于个人网站来说,没有比博客更合适的形式了。在博客中,文章才是最主要的,一切都显得主次分明,干净利落。相比之下,论坛中主题和回复鱼龙混杂,阅读体验非常差。同时,博客比论坛的数据库小很多,便于维护。 为什么是静态博客很多人选择在虚拟主机或vps上面搭建动态博客。独立博客如此麻烦的维护工作,能不能减轻一些呢?正如阮一峰前辈所说,blogger分为三个阶段。最开始,是门户博客。之后,是独立博客。最后,觉得独立博客自己管理起来费劲,便找个别人来管的空间,自己负责写就好。如果我们能够找到这样的空间,在自己保留最大控制权前提下,由别人托管,会省去不少事情。 静态博客编译之后是纯html页面,优点就是支持它的环境十分好找,例如github、gitcafe等站点都支持静态页面托管,自然是我们的首选了。 但是静态博客并非没有缺点。动态博客更新文章时,脚本是不变的,只需要更新数据库。静态博客要频繁改动文件,不支持增量式上传的东西,比如ftp,就难于管理。此外,还要十分熟悉git各种命令,才能部署页面。]]></content>
      <categories>
        <category>Hexo</category>
        <category>简介</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
